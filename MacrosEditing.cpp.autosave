#include "MacrosEditing.h"
#include <QFileDialog>
#include <QTextStream>
#include <QMessageBox>

MacrosEditing::MacrosEditing(QWidget *parent)
    : QWidget(parent, Qt::WindowCloseButtonHint)
    , toolBar(new QToolBar(this))
    , package(new QLineEdit(this))
    , mainLay(new QGridLayout(this))
    , rbHEX(new QRadioButton(this))
    , rbDEC(new QRadioButton(this))
    , rbASCII(new QRadioButton(this))
    , lbHEX(new QLabel(this))
    , lbDEC(new QLabel(this))
    , lbASCII(new QLabel(this))
{
    setWindowTitle("RS232 Terminal - Macros");
    
    addToolBar(Qt::TopToolBarArea, toolBar);
    toolBar->addAction("New");
    toolBar->addAction("Load");
    toolBar->addAction("Save");
    toolBar->addAction("Save as", this, SLOT(saveDialog());

    setLayout(mainLay);
    mainLay->setSpacing(3);
    mainLay->setMargin(3);
    mainLay->addWidget(new QLabel("Formats:", this), 0, 0);
    mainLay->addWidget(package, 0, 1);
    mainLay->addWidget(rbHEX, 1,);
}

void MacrosEditing::saveDialog()
{
    QString fileName = QFileDialog::getSaveFileName(this, tr("Save File"), tr("Macro Files (*.rsmc)"));

        if (fileName != "") {
            QFile file(fileName);
            if (!file.open(QIODevice::WriteOnly)) {
                QMessageBox::critical(this, tr("Error"), tr("Could not save file"));
                return;
            } else {
                QTextStream stream(&file);
                stream << package->text()+"\n";
                stream.flush();
                stream << interval->value();
                stream.flush();
                file.close();
            }
        }
}

